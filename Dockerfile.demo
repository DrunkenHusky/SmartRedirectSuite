# syntax = docker/dockerfile:1

# Demo Dockerfile for SmartRedirect Suite
# Resets data every 24h via cron (sessions, uploads, tracking, settings, rules) and adds a demo Banner

ARG NODE_VERSION=20.18.0
FROM node:${NODE_VERSION}-slim AS base

LABEL fly_launch_runtime="Node.js"

WORKDIR /app

# Build stage
FROM base AS build
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential node-gyp pkg-config python-is-python3
COPY package-lock.json package.json ./
RUN npm ci --include=dev
COPY . .

RUN npm run build \
    && printf '%s\n' '<div id="demo-banner" style="background:#fffbdd;padding:10px;text-align:center;position:relative;">Dies ist nur eine Demo-Instanz und wird täglich zurückgesetzt. Admin-Passwort: <strong>Password1</strong>. <a href="https://github.com/SmartRedirectSuite/SmartRedirectSuite" target="_blank" rel="noopener noreferrer" style="color:#0645AD;font-weight:bold;text-decoration:underline;">GitHub-Repository</a> - Für weitere Fragen besuchen Sie diese Seite.<button id="banner-close" style="position:absolute;right:5px;top:5px;border:none;background:transparent;font-size:16px;cursor:pointer;">&times;</button></div><script>if(localStorage.getItem("demoBannerClosed")==="true"){document.getElementById("demo-banner").style.display="none";}document.getElementById("banner-close").addEventListener("click",function(){document.getElementById("demo-banner").style.display="none";localStorage.setItem("demoBannerClosed","true");});</script>' > /tmp/banner.html \
    && sed -i '/<body[^>]*>/r /tmp/banner.html' dist/public/index.html \
    && rm /tmp/banner.html

RUN npm prune --omit=dev

# Final stage
FROM base

# Install cron for scheduled resets
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y cron && \
    rm -rf /var/lib/apt/lists/*

# Copy built application
COPY --from=build /app /app

# Store default configs for daily reset
RUN mkdir -p /defaults && \
    cp /app/data/settings.json /defaults/settings.json && \
    cp /app/data/rules.json /defaults/rules.json

# Add reset script
COPY demo-reset.sh /usr/local/bin/reset-app.sh
RUN chmod +x /usr/local/bin/reset-app.sh

# Cron job to reset at midnight
RUN echo '0 0 * * * root /usr/local/bin/reset-app.sh > /proc/1/fd/1 2>/proc/1/fd/2' > /etc/cron.d/reset-app && \
    chmod 0644 /etc/cron.d/reset-app

EXPOSE 5000

# Start cron and application
CMD [ "sh", "-c", "cron && npm run start" ]
